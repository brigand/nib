[{"path":"data/dom/$.js","category":"dom","name":"$","description":"Simple replacement for jQuery-like selectors in IE8+","types":"String[, HTMLElement] -> Array<HTMLElement>","function":"function $(sel, parent) {\n    var nodeList = (parent || document).querySelectorAll(sel),\n        slice = Array.prototype.slice;\n    return slice.call(nodeList);\n}","examples":"var allText = $(\"p\").map(function(el){\n    return el.textContent;\n}).join(\"\\n\\n\");\n\n// A function numbers links in a container\nvar numberLinks = function(container){\n    $(\"a\", container).forEach(function(el, index){\n        el.textContent += \" (\" + (index + 1) + \")\";\n    });\n};"},{"path":"data/dom/delegate.js","category":"dom","name":"delegate","description":"super fast event delegation","types":"EventName, Selector, HandlerFunction[, Scope] -> Undefined","function":"function delegate(eventName, selector, callback, scope) {\n    var mappings = delegate.mappings;\n    if (!mappings[eventName]) {\n        document.addEventListener(eventName, delegate.handle, false);\n        mappings[eventName] = [];\n    }\n\n    var list = mappings[eventName];\n\n    list.push({\n        eventName: eventName,\n        selector: selector,\n        callback: callback,\n        scope: scope || document\n    });\n}\ndelegate.mappings = {};\ndelegate.handle = function handle(event) {\n    var name = event.type;\n    var root = document.body.parentNode;\n    var relevantHandlers = delegate.mappings[name];\n    \n    var body = document.body;\n    var matches = body.matches \n        || body.matchesSelector \n        || body.webkitMatchesSelector \n        || body.mozMatchesSelector \n        || body.msMatchesSelector;\n\n    for (var i = 0; i < relevantHandlers.length; i++) {\n        var handlerConfig = relevantHandlers[i];\n        var target = event.target;\n        var selector = handlerConfig.selector;\n        var callback = handlerConfig.callback;\n\n        if (handlerConfig.eventName === name) {\n            while (target !== root) {\n                if (matches.call(target, selector)) {\n                    return callback.apply(target, arguments);\n                }\n\n                target = target.parentNode;\n            }\n        }\n    }\n};","examples":"delegate(\"click\", \"p\", function (e) {\n    this.style.backgroundColor = \"yellow\";\n});\n\n// bind all links to our router\ndelegate(\"click\", \"[href]\", function (e) {\n    e.preventDefault();\n    router.navigate(this.href);\n});"},{"path":"data/format/insert.js","category":"format","name":"insert","description":"Insert values into a string","types":"String, Object --> String","function":"function insert(template, mapping) {\n    // if mapping is left out, allow partial application\n    if (!mapping) {\n        return insert.bind(null, template)\n    }\n\n    var has = Object.prototype.hasOwnProperty;\n\n    // replace all upper case parts of the template\n    // with the values from mapping\n    return template.replace(/\\{(\\w+)\\}/g, function(all, match){\n        if (has.call(mapping, match)){\n            return mapping[match];\n        }\n        else {\n            return all;\n        }\n    });\n}","examples":"var name = {\n    first: \"John\",\n    last: \"Smith\"\n};\n\ninsert(\"{last}, {first}\", name); // => \"Smith, John\"\n\n// use partial application to template an array of items\nvar guests = [\n    {first: \"John\", last: \"Smith\"},\n    {first: \"Jane\", last: \"Doe\"}\n];\n\nguests.map(insert(\"{first} {last}\"))\n    .join(\" and \"); // => \"John Smith and Jane Doe\""},{"path":"data/format/leftPad.js","category":"format","name":"leftPad","description":"Pad a string with characters, e.g. for time formatting","types":"String[, count=2, s=\"0\"] -> String","function":"function leftPad(str, count, s){\n\tcount = count || 2;\n\ts = s || \"0\";\n\n\twhile (str.length < count) {\n\t\tstr = s + str;\n\t}\n\n\treturn str;\n}","examples":"leftPad(7) // => \"07\"\n\n// make a binary string at least 8 bits\nleftPad(\"010101\", 8); // => \"00010101\"\n\n// right justify a string with spaces\nleftPad(\"foo\", 10, \" \"); // => \"       foo\""},{"path":"data/http/GET.js","category":"http","name":"GET","description":"Get some text from a web server","types":"String, SuccessCallback[, ErrorCallback] -> Undefined","function":"function GET(url, successCallback, errorCallback) {\n    \"use strict\";\n    var xhr = new XMLHttpRequest();\n    xhr.onreadystatechange = function(){\n        if (xhr.readyState !== 4) {\n            return;\n        }\n\n        // if no error callback is supplied, assume the successHandler can handle it\n        if ((typeof errorCallback !== \"function\") || (xhr.status >= 200 && xhr.status < 300)) {\n            successCallback(xhr.responseText, xhr);\n        }\n        else {\n            errorCallback(xhr.responseText, xhr);\n        }\n    };\n    xhr.open(\"get\", url, true);\n    xhr.send();\n}","examples":"GET(\"foo.txt\", function(text){\n    console.log(text);\n});\n\n// Get a text file and log it to the console\n// if it's not found, log \"not found\"\nGET(\"foo.txt\", function(text){\n    console.log(text);\n}, function(errorText, xhr){\n    if (xhr.status === 404) {\n        console.warn(\"foo.txt was not found\");\n    }\n    else {\n        console.warn(errorText);\n    }\n});"},{"path":"data/http/objectFromQueryString.js","category":"http","name":"objectFromQueryString","description":"Convert a query string into an object\ne.g. \"a=1&b=2&b=3\" to {a: 1, b: [2, 3]}\nif no string is passed, the current page's query string is used","types":"[String] -> Object","function":"function objectFromQueryString(string){\n    var has = Object.prototype.hasOwnProperty;\n\n    if (arguments.length = 0) {\n        string = window.location.search;\n    }\n\n    // remove the leading \"?\"\n    if (string[0] === \"?\") {\n        string = string.slice(1);\n    }\n\n    var parts = string.split(\"&\");\n    var obj = {};\n\n    parts.forEach(function(pair){\n        var tmp = pair.split(\"=\");\n        var key = decodeURIComponent(part[0]);\n        var value = decodeURIComponent(temp[1]);\n\n        if (has.call(obj, key)) {\n            if (typeof obj[key].push) {\n                obj[key].push(value);\n            }\n            else {\n                obj[key] = [obj[key], value];\n            }\n        }\n        else {\n            obj[key] = value;\n        }\n    });\n\n    return obj;\n}","examples":"var query = \"?type=fast&color=red\";\nobjectFromQueryString(query);"},{"path":"data/http/objectToQueryString.js","category":"http","name":"objectToQueryString","description":"Convert an object into a query string\ne.g. {a: 1, b: [2, 3]} to \"a=1&b=2&b=3\"","types":"Object -> String","function":"function objectToQueryString(obj){\n    var pairs = [], \n        own = Object.prototype.hasOwnProperty, \n        toString = Object.prototype.toString;\n\n    for (var key in obj) {\n        if (!own.call(obj, key)) {\n            return;\n        }\n\n        var value = obj[key];\n\n        if (toString.call(value) === \"[object Array]\") {\n            value.forEach(function(x){\n                pairs.push([key, x]);\n            });\n        }\n        else {\n            pairs.push([key, value]);\n        }\n    }\n\n    return pairs.map(function(pair){\n        return encodeURIComponent(pair[0]) + \"=\" \n             + encodeURIComponent(pair[1]);\n    }).join(\"&\");\n}","examples":"var url = \"/cars?\" + objectToQueryString({type: \"fast\", color: \"red\"});\ndoAjaxyStuff(url);"}]